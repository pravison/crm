# Generated by Django 5.1.4 on 2024-12-27 07:59

import django.db.models.deletion
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        ('customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AI_Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_name', models.CharField(max_length=100)),
                ('response_message', models.TextField(blank=True, help_text='this is a message send to a customer immediately is added to the database', max_length=300)),
                ('follow_up_notification', models.BooleanField(default=True, help_text='will be notified everytime ai follows up with a customer')),
                ('respond_notification', models.BooleanField(default=True, help_text='will be notified everytime ai responds to a customer')),
                ('escalation_notification', models.BooleanField(default=True, help_text='will be notified everytime ai escalates a customers issue')),
                ('midday_report_notification', models.BooleanField(default=True, help_text='Ai will notify you about its work everyday before midday')),
                ('evening_report_notification', models.BooleanField(default=True, help_text='Ai will notify you about its work everyday evening')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agents', to='clients.client')),
                ('staff_to_notify', models.ManyToManyField(blank=True, help_text='these are the staff that will be receiving notifications only two allowed', related_name='agents', to='clients.staff')),
            ],
        ),
        migrations.CreateModel(
            name='AiReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send', models.BooleanField(default=False)),
                ('last_updated', models.DateField(auto_now=True)),
                ('ai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai.ai_agent')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports', to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='Escalation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reasons', tinymce.models.HTMLField(blank=True, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('done', models.BooleanField(default=False)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='escalations', to='clients.client')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.customer')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='escalations', to='clients.staff')),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=299)),
                ('web_url', models.URLField(blank=True, null=True)),
                ('description', tinymce.models.HTMLField(blank=True)),
                ('api_url', models.URLField(blank=True, null=True)),
                ('api_token', models.CharField(blank=True, max_length=700, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='knowledgebases', to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='SalesFunnelStageInstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funnel_stage', models.CharField(choices=[('awareness', 'awareness'), ('interest', 'interest'), ('decision', 'decision'), ('purchase', 'purchase'), ('active', 'active'), ('dormant', 'dormant')], max_length=50)),
                ('days_to_follow_up', models.IntegerField(blank=True, help_text='follow up after how many days from the last interaction', null=True)),
                ('instructions', tinymce.models.HTMLField(help_text="write you sales SOP'S depending on the funnel stage you choose. provide instructions to all the above stages", max_length=500)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instructions', to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='TaskPipeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.TextField(blank=True, null=True)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_time', models.TimeField(blank=True, null=True)),
                ('for_ai_to_do', models.BooleanField(default=True, help_text='if false human will have to do the task and not ai and vice versa')),
                ('done', models.BooleanField(default=False)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pipelines', to='clients.client')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.customer')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pipelines', to='clients.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Whatsapp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whatsapp_number', models.CharField(max_length=20)),
                ('whatsapp_phone_number_id', models.CharField(max_length=100)),
                ('whatsapp_verify_token', models.CharField(max_length=200)),
                ('whatsapp_auth_token', models.CharField(max_length=500)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='whatsapps', to='clients.client')),
            ],
        ),
    ]
